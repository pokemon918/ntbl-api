{
	"name": "ntbl-api",
	"version": "3.2.2",
	"description": "Noteable API",
	"private": true,
	"main": "-",
	"scripts": {
		"start": "yarn install --frozen-lockfile && php -S 127.0.0.1:8000 -t ./public & sleep 3 && curl -vk http://localhost:8000/tastingnote/testkey1",
		"stop": "fkill -sf :8000",
		"download": "git fetch && git rebase origin && yarn run reload",
		"reload": "yarn install --frozen-lockfile && yarn install-components && yarn seed",
		"install-components": "./install-composer.sh && php composer.phar install --no-plugins --no-scripts && php composer.phar dump-autoload",
		"seed": "yarn env && export DB_CONNECTION=mysql && php composer.phar dump-autoload && php artisan migrate --force && php artisan db:seed --force",
		"seed-contest": "yarn ts-node process/contest/seed/seedContestSWAdata.ts",
		"seed-contest-v2": "yarn ts-node process/contest/seed/seedContestSWAdatav2.ts",
		"seed-contest-dev": "HOST=http://ci-api.ntbl.link PORT=80 yarn seed-contest",
		"seed-contest-dev-v2": "HOST=http://ci-api.ntbl.link PORT=80 yarn ts-node process/contest/seed/seedContestSWAdatav2.ts",
		"seed-contest-test": "HOST=http://test-api.ntbl.link PORT=80 yarn ts-node process/contest/seed/seedContestSWAdata.ts",
		"seed-contest-test-v2": "HOST=http://test-api.ntbl.link PORT=80 yarn ts-node process/contest/seed/seedContestSWAdatav2.ts",
		"env": "(shx ls package.json && (shx ls .env || (shx cat .env.example >> .env))) || (echo 'Please do a yarn install' && false)",
		"rollback": "php artisan migrate:rollback --step=1 --force",
		"mocha-p": "env PORT=8000 ts-node test/mocha-p.ts --backend 'php -t ./public -S 127.0.0.1' --timeout 120000",
		"test-all-p": "yarn mocha-p 'test/!(_*)/*.js'",
		"test-p": "yarn format && yarn test-all-p --bail ",
		"mocha": "env PORT=8000 mocha --bail --timeout 120000",
		"test-all": "yarn mocha 'test/!(_*)/*.js'",
		"test": "yarn format && yarn test-all --bail",
		"test-ci": "yarn migration-ok && yarn test-format && yarn test-all-p --bail",
		"test-total": "npm-run-all init start test-ci stop",
		"test-format": "yarn pretty-since-dev --list-different || echo 'Please correct file formatting using `yarn format` and try again.'",
		"migration-ok": "(($(git diff --name-only --diff-filter=M master | grep 'database/migrations' | wc -l | xargs))) && echo 'Please dont edit the migration files' && exit 1 || exit 0",
		"auth-demo": "node --require babel-polyfill --require babel-register ./test/auth/auth-demo.js",
		"diff2html": "git diff develop 'test/*' | diff2html -i stdin -o stdout | rr '<h1.*h1>' '<h1>'\"$(git rev-parse --abbrev-ref HEAD)\"'</h1>' | rr '(</style>)' '.d2h-del{display:none}.hljs-string,.hljs-doctag{color:#9815af}.d2h-ins{background-color:#97f295}â‚¬1' | rr '^Usage: diff2html[\\w\\W]+$' '<center><h1><br><tt>Nothing added to test files' -M > diff.html ",
		"deploy2test": "git pull && git tag 'deploy2test-r'\"$(git tag -l 'deploy2test*' | wc -l | xargs)\" && git push origin --no-verify --tags #",
		"bump": "bump --tag 'v%s'",
		"fmt": "yarn pretty-commit --write",
		"format": "yarn pretty-since-dev --write",
		"format-all": "yarn pretty-all --write",
		"pretty-since-dev": "{ git diff --name-only --diff-filter=d origin/develop ; git diff --name-only --diff-filter=d --staged origin/develop ; } | sort | uniq | grep -E '\\.(scss|css|js|ts|vue|json|php)$' | xargs prettier",
		"pretty-commit": "{ git diff --name-only  --diff-filter=d ; git diff --name-only  --diff-filter=d --staged ; } | sort | uniq | grep -E '\\.(scss|css|js|ts|vue|json|php)$' | xargs prettier",
		"pretty-all": "git ls-tree --full-tree --name-only -r HEAD | grep -E '\\.(scss|css|js|ts|vue|json|php)$' | xargs prettier",
		"todo": "git ls-tree --full-tree --name-only -r head | xargs grep -inEro '\\Wtodo[ :].*'",
		"tofix": "git ls-tree --full-tree --name-only -r HEAD | xargs grep -lrE '<{5,}' #",
		"add": "git add --all",
		"goto": "git fetch && git checkout",
		"repush": "yarn rebase && yarn push",
		"next": "git add --all && git rebase --continue #",
		"fresh": "yarn is-git-clean && cmdmix 'yarn goto '%1' && yarn pull-hard'",
		"save": "cmdmix 'git add --all && git commit -am \"%1\"'",
		"push": "git push --force-with-lease && git push --no-verify --tags #",
		"pre-pr": "cmdmix 'yarn fresh '%1' && yarn repush'",
		"is-git-clean": "git diff --quiet --exit-code --cached || (echo Please commit or stash changes && exit 1)",
		"amend": "git reset --soft HEAD~1 && sleep 1 && git add --all && git commit --file .git/COMMIT_EDITMSG # This works with husky hooks",
		"rebase": "git-branch-is '^(release|master|hotfix|develop)' -riq || (git-branch-is --not '^(release|master|hotfix|develop)' && (git fetch || 1) && git rebase origin/develop)",
		"tagit": "git tag \"$(git rev-parse --abbrev-ref HEAD | awk -F  '/' '{print $NF}')\"'-r'\"$(git tag -l \"$(git rev-parse --abbrev-ref HEAD | awk -F  '/' '{print $NF}')\"'*' | wc -l | xargs)\" && git push origin --no-verify --tags #",
		"pull-hard": "git-branch-is '^(release|master|hotfix|develop)' -riq || (git-branch-is --not '^(release|master|hotfix|develop)' && git fetch && git reset --hard $(git merge-base head $(git for-each-ref --format='%(upstream:short)' $(git symbolic-ref -q HEAD))) && git pull)",
		"sync2master": "git fetch && git checkout master && git rebase origin/master && git checkout develop && git rebase origin/develop && git rebase master && yarn push && git checkout master && git merge develop --ff-only && yarn bump patch && git push && git checkout develop && git rebase master && yarn push"
	},
	"repository": {
		"type": "git",
		"url": "git+https://mathiasrw@bitbucket.org/mathiasrw/ntbl-api.git"
	},
	"devDependencies": {
		"@prettier/plugin-php": "0.16.1",
		"@types/node": "14.0.14",
		"@types/request": "2.48.5",
		"babel-core": "^6.26.0",
		"babel-plugin-transform-object-rest-spread": "^6.26.0",
		"babel-polyfill": "^6.26.0",
		"babel-preset-env": "^1.6.1",
		"babel-register": "^6.26.0",
		"base32": "0.0.6",
		"chai": "^4.1.2",
		"chai-date-string": "^0.1.0",
		"chai-datetime": "^1.7.0",
		"chalk": "4.1.0",
		"chromafi": "^2.1.0",
		"cmdmix": "^2.0.1",
		"dateformat": "^3.0.3",
		"diff2html-cli": "5.1.1",
		"dotenv": "^8.1.0",
		"faker": "^4.1.0",
		"fkill-cli": "6.0.1",
		"form-data": "^3.0.0",
		"git-branch-is": "4.0.0",
		"hi-base32": "^0.5.0",
		"husky": "4.2.5",
		"js-sha3": "0.8.0",
		"lint-staged": "10.2.11",
		"mime-types": "2.1.27",
		"mocha": "8.0.1",
		"mocha-parallel-tests": "^2.3.0",
		"npm-run-all": "^4.1.5",
		"pbkdf2": "3.1.1",
		"prettier": "2.2.1",
		"request": "^2.88.2",
		"request-promise": "^4.2.5",
		"rexreplace": "6.0.14",
		"shx": "^0.3.2",
		"string-to-stream": "^3.0.1",
		"ts-node": "8.10.2",
		"typescript": "3.9.5",
		"version-bump-prompt": "6.1.0",
		"yarn": "1.22.10"
	},
	"homepage": "https://bitbucket.org/mathiasrw/ntbl-api#readme",
	"author": "MRW",
	"license": "UNLICENSED",
	"prettier": {
		"useTabs": true,
		"printWidth": 100,
		"singleQuote": true,
		"arrowParens": "always",
		"bracketSpacing": false,
		"trailingComma": "es5"
	},
	"lint-staged": {
		"*.{scss,css,js,ts,json,php}": [
			"prettier --write"
		]
	},
	"husky": {
		"hooks": {
			"pre-commit": "lint-staged",
			"post-commit": "(git symbolic-ref --short HEAD -q && yarn rebase) || echo ''",
			"pre-push": "yarn test-format || exit 1",
			"post-push": "#echo 'Its pushed - now see if we need to create cards on any of this:' && yarn todo"
		}
	},
	"dependencies": {
		"chiqq": "0.1.3",
		"csv-parser": "2.3.3",
		"csvtojson": "^2.0.10",
		"xlsx": "0.16.9"
	}
}
